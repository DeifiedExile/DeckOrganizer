<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--    <security:http use-expressions="true" authentication-manager-ref="myAuthenticationManager" >-->
    <!--        <security:intercept-url pattern="/donut/admin/**" access="hasRole('ADMIN')"/>-->
    <!--        <security:intercept-url pattern="/donut/user/**" access="hasRole('USER')"/>-->
    <!--        <security:intercept-url pattern="/resources/**" access="permitAll()"/>-->
    <!--        <security:intercept-url pattern="/**" access="permitAll()" />-->

    <!--        &lt;!&ndash; We don't need to write a mapping for "authenticate"-->
    <!--        Spring understands how to process login if we name everything correctly &ndash;&gt;-->
    <!--        <security:form-login-->
    <!--                login-page="/showLoginForm"-->
    <!--                login-processing-url="/authenticate"-->
    <!--                authentication-failure-url="/showLoginForm?error=true"-->
    <!--                username-parameter="username"-->
    <!--                password-parameter="password"-->
    <!--                default-target-url="/donut/list"/>-->
    <!--        <security:logout logout-url="/logout"-->
    <!--                         logout-success-url="/showLoginForm?logout=true"/>-->
    <!--    </security:http>-->

    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="org.apache.derby.jdbc.EmbeddedDriver"/>

        <property name="jdbcUrl" value="jdbc:derby:#{servletContext.getRealPath('/')}/../../../lib/deckdb"/>

        <property name="user" value="wolf"/>
        <property name="password" value="wolf"/>

        <property name="initialPoolSize" value="5"/>
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="20"/>
        <property name="maxIdleTime" value="30000"/>
    </bean>

    <bean id="mySessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="packagesToScan" value="hibernate.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.DerbyTenSevenDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="myTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>

    <mvc:annotation-driven/>


    <tx:annotation-driven transaction-manager="myTransactionManager"/>

    <context:component-scan base-package="hibernate"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/>


</beans>